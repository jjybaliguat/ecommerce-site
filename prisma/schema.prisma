// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Products {
  id String @id @default(uuid())
  name String
  price Int
  description String
  imagePath String
  isAvailableForPurchase Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
  variants Variant[]
  specs Specs[]
}

model Specs {
  id String @id @default(uuid())
  key String
  value String
  productId String
  product Products @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model Variant {
  id String @id @default(uuid())
  name String
  price Int
  imagePath String
  isAvailableForPurchase Boolean @default(true)
  productId String
  vendo Products @relation(fields: [productId], references: [id], onDelete: Cascade)
  orders Order[]
}

model User {
  id String @id @default(uuid())
  email String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders Order[]
}

model Order {
  id String @id @default(uuid())
  userId String
  productId String
  variantId String
  deliveryStatus String @default("Processing")
  paymentStatus String @default("Unpaid")
  amountToPay Int
  mod String
  dateOfPurchase DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  vendo Products @relation(fields: [productId], references: [id], onDelete: Restrict)
  variant Variant @relation(fields: [variantId], references: [id])
}
